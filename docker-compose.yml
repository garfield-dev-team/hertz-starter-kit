version: '3'

services:
  hertz_app:
    container_name: hertz_starter_kit
    build: .
    ports:
      - '8080:8080'
    environment:
      - ENDPOINT=s3:9000
      - ACCESS_KEY_ID=s3manager
      - SECRET_ACCESS_KEY=s3manager
      - USE_SSL=false
    depends_on:
      - s3
  s3:
    container_name: s3
    image: docker.io/minio/minio
    command: server /data
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ACCESS_KEY=s3manager
      - MINIO_SECRET_KEY=s3manager
      - MINIO_ADDRESS=0.0.0.0:9000
      - MINIO_CONSOLE_ADDRESS=0.0.0.0:9001
  mysql:
    image: 'mysql:latest'
    container_name: hertzapp_mysql
    environment:
      - MYSQL_DATABASE=gorm # dbname
      - MYSQL_USER=gorm # user
      - MYSQL_PASSWORD=gorm # pass
      - MYSQL_RANDOM_ROOT_PASSWORD="yes"
#      - MYSQL_ROOT_PASSWORD=gorm
    ports:
      - "3306:3306"
  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka
#    network_mode: host
    depends_on:
      - zookeeper
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka2:
    image: spotify/kafka
    container_name: kafka2
    ports:
      - "9092:9092"
      - "2181:2181"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elasticsearch
    environment:
      # 只在单节点上运行
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elastic
  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    container_name: kibana
    networks:
      - elastic
    ports:
      - "5601:5601"

networks:
  elastic:
    driver: bridge
