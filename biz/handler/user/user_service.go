// Code generated by hertz generator.

package user

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/pkg/errors"
	user "hertz-starter-kit/biz/model/user"
)

// Register .
// @router /user/register [POST]
func Register(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.RegisterRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		// 业务代码中将错误存放到app.RequestContext中直接退出
		//c.String(consts.StatusBadRequest, err.Error())
		_ = c.Error(errors.WithStack(err))
		return
	}

	resp := new(user.RegisterResponse)

	c.JSON(consts.StatusOK, resp)
}

// Login .
// @router /user/login [POST]
func Login(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.LoginRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		//c.String(consts.StatusBadRequest, err.Error())
		_ = c.Error(errors.WithStack(err))
		return
	}

	resp := new(user.LoginResponse)

	c.JSON(consts.StatusOK, resp)
}

// Info .
// @router /user/:username [GET]
func Info(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.InfoRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		//c.String(consts.StatusBadRequest, err.Error())
		_ = c.Error(errors.WithStack(err))
		return
	}

	resp := new(user.InfoResponse)

	c.JSON(consts.StatusOK, resp)
}
